const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/NameThatHand-xX_sNER_.js","assets/BaseGame-sCkLoj0v.js","assets/HandVsHand-pZVq4nSL.js","assets/pokersolver-wrapper-RbdFFWZ_.js","assets/BestFiveFromSeven-BNXSNSzr.js","assets/TheNuts-DUcCk286.js"])))=>i.map(i=>d[i]);
!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if("childList"===t.type)for(const e of t.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&n(e)}).observe(document,{childList:!0,subtree:!0})}function n(e){if(e.ep)return;e.ep=!0;const n=function(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?n.credentials="include":"anonymous"===e.crossOrigin?n.credentials="omit":n.credentials="same-origin",n}(e);fetch(e.href,n)}}();const e={},n=function(n,t,a){let r=Promise.resolve();if(t&&t.length>0){let n=function(e){return Promise.all(e.map(e=>Promise.resolve(e).then(e=>({status:"fulfilled",value:e}),e=>({status:"rejected",reason:e}))))};document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),s=a?.nonce||a?.getAttribute("nonce");r=n(t.map(n=>{if((n=function(e){return"/thenuts/"+e}(n))in e)return;e[n]=!0;const t=n.endsWith(".css"),a=t?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${n}"]${a}`))return;const r=document.createElement("link");return r.rel=t?"stylesheet":"modulepreload",t||(r.as="script"),r.crossOrigin="",r.href=n,s&&r.setAttribute("nonce",s),document.head.appendChild(r),t?new Promise((e,t)=>{r.addEventListener("load",e),r.addEventListener("error",()=>t(new Error(`Unable to preload CSS for ${n}`)))}):void 0}))}function s(e){const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=e,window.dispatchEvent(n),!n.defaultPrevented)throw e}return r.then(e=>{for(const n of e||[])"rejected"===n.status&&s(n.reason);return n().catch(s)})};class t{constructor(e){this.routes=new Map,this.currentModule=null,this.currentPath="",this.useHash=e.useHash??!1,this.container=e.container??document.getElementById("app"),e.routes.forEach(e=>{this.routes.set(e.path,e)}),window.addEventListener("popstate",()=>this.handlePopState()),this.handleInitialNavigation()}getPath(){return this.useHash?window.location.hash.slice(1)||"/":window.location.pathname}getStateKey(){return`game-state-${this.currentPath}`}saveState(){if(this.currentModule&&this.currentModule.serialize){const e=this.currentModule.serialize(),n=this.getStateKey();sessionStorage.setItem(n,JSON.stringify(e))}}loadState(){const e=this.getStateKey(),n=sessionStorage.getItem(e);if(n)try{return JSON.parse(n)}catch{sessionStorage.removeItem(e)}}async handlePopState(){await this.navigateToPath(this.getPath(),!1)}async handleInitialNavigation(){const e=this.getPath();await this.navigateToPath(e,!1)}async navigate(e,n=!1){this.saveState();const t=this.useHash?`#${e}`:e;n?window.history.replaceState({path:e},"",t):window.history.pushState({path:e},"",t),await this.navigateToPath(e,!1)}async navigateToPath(e,n=!0){const t=e.split("?")[0].split("#")[0],a=this.routes.get(t)||this.routes.get("/");if(a){n&&this.saveState(),this.currentModule&&this.currentModule.unmount&&this.currentModule.unmount(),this.currentPath=t,document.title=a.title;try{const e=await a.loader();this.currentModule=e,this.container.innerHTML="";const n=this.loadState();e.mount(this.container,n),n&&e.deserialize&&e.deserialize(n)}catch(r){this.container.innerHTML="<h1>Error loading game</h1>"}}}getParams(){if(this.useHash){const e=window.location.hash.slice(1),n=e.indexOf("?");return-1!==n?new URLSearchParams(e.slice(n+1)):new URLSearchParams}return new URLSearchParams(window.location.search)}updateParams(e){const n=new URLSearchParams(e).toString(),t=this.currentPath+(n?`?${n}`:""),a=this.useHash?`#${t}`:t;window.history.replaceState({path:this.currentPath},"",a)}}let a=null;function r(){return a}const s=["2","3","4","5","6","7","8","9","T","J","Q","K","A"],i=["h","d","c","s"],o={h:"♥",hearts:"♥","♥":"♥",d:"♦",diamonds:"♦","♦":"♦",c:"♣",clubs:"♣","♣":"♣",s:"♠",spades:"♠","♠":"♠"},c={h:"red",hearts:"red","♥":"red",d:"red",diamonds:"red","♦":"red",c:"black",clubs:"black","♣":"black",s:"black",spades:"black","♠":"black"};let l="images/cards/",d="png",u=85,h=120,m=28;function p(e){if("string"==typeof e){const n=e.match(/^(10|[2-9TJQKA])([hdcs])$/i);if(!n)throw new Error(`Invalid card format: ${e}`);const t="10"===n[1].toUpperCase()?"T":n[1].toUpperCase(),a=n[2].toLowerCase();return{rank:t,suit:a,suitSymbol:o[a],color:c[a],displayRank:"T"===t?"10":t,toString:()=>`${t}${a}`}}if("object"==typeof e&&e.rank&&e.suit){const n=e.suit,t=n.toLowerCase(),a=o[t]?t:Object.keys(o).find(e=>o[e]===n)||t,r=e.rank,s="10"===r?"T":r;return{rank:s,suit:a,suitSymbol:o[a]||n,color:c[a]||"black",displayRank:"T"===s?"10":s,toString:()=>`${s}${a}`}}throw new Error("Invalid card format")}function g(e,n={}){const t=p(e),a={width:u,height:h,fontSize:m,clickable:!1,selected:!1,faceDown:!1,onClick:void 0,className:"",style:"simple",...n},r=document.createElement("div");if(r.className=`card ${t.color} ${a.className}`,a.selected&&r.classList.add("selected"),a.faceDown&&r.classList.add("face-down"),a.clickable&&r.classList.add("clickable"),r.style.width=`${a.width}px`,r.style.height=`${a.height}px`,r.style.fontSize=`${a.fontSize}px`,a.faceDown)r.innerHTML=`<img src="${l}back.${d}" alt="Card back" />`;else{const e=`${t.rank}${t.suit}`;r.innerHTML=`<img src="${l}${e}.${d}" \n                              alt="${t.displayRank}${t.suitSymbol}" />`}return a.clickable&&a.onClick&&(r.style.cursor="pointer",r.addEventListener("click",()=>a.onClick(t,0))),r.dataset.rank=t.rank,r.dataset.suit=t.suit,r.dataset.card=t.toString(),r}function f(e,n,t={}){const a="string"==typeof n?document.getElementById(n):n;if(!a)throw new Error("Container element not found");a.innerHTML="",e.forEach((e,n)=>{const r={...t,onClick:t.onClick?()=>t.onClick(e,n):void 0};a.appendChild(g(e,r))})}function v(e={}){const n=[];for(const t of s)for(const e of i)n.push(t+e);return e.shuffled?y(n,e.seed):n}function y(e,n=null){const t=[...e],a=null!==n?function(e){let n=e;return function(){return n=(9301*n+49297)%233280,n/233280}}(n):Math.random;for(let r=t.length-1;r>0;r--){const e=Math.floor(a()*(r+1));[t[r],t[e]]=[t[e],t[r]]}return t}function b(e,n={}){const t={separator:" ",colored:!0,...n};return e.map(e=>{const n=p(e),a=`${n.displayRank}${n.suitSymbol}`;if(t.colored){return`<span class="${"red"===n.color?"card-heart":"card-spade"}">${a}</span>`}return a}).join(t.separator)}function w(){if(document.getElementById("cards-default-styles"))return;const e=document.createElement("style");e.id="cards-default-styles",e.textContent="\n    .card, .playing-card {\n      display: inline-block;\n      background: white;\n      border: 2px solid #333;\n      border-radius: 8px;\n      margin: 5px;\n      position: relative;\n      font-weight: bold;\n      text-align: center;\n      line-height: 100px;\n      cursor: default;\n      transition: transform 0.2s;\n      user-select: none;\n      box-sizing: border-box;\n    }\n    \n    .card.clickable {\n      cursor: pointer;\n    }\n    \n    .card:hover.clickable {\n      transform: translateY(-5px);\n    }\n    \n    .card.selected {\n      border-color: #667eea;\n      box-shadow: 0 0 20px rgba(102, 126, 234, 0.5);\n      transform: translateY(-10px);\n    }\n    \n    .card.red {\n      color: #dc3545;\n    }\n    \n    .card.black {\n      color: #212529;\n    }\n    \n    .card.face-down {\n      background: linear-gradient(45deg, #667eea 25%, #764ba2 75%);\n      color: white;\n    }\n    \n    .card .card-rank {\n      font-size: 1.3em;\n      font-weight: 700;\n      line-height: 1.2;\n      margin-top: 20%;\n    }\n    \n    .card .card-suit {\n      font-size: 1.1em;\n      margin-top: 5px;\n    }\n    \n    .card-back {\n      font-size: 2em;\n      line-height: inherit;\n    }\n    \n    .card-heart, .card-diamond {\n      color: #dc3545;\n      font-weight: 600;\n    }\n    \n    .card-spade, .card-club {\n      color: #212529;\n      font-weight: 600;\n    }\n    \n    .card img, .playing-card img {\n      width: 100%;\n      height: 100%;\n      object-fit: contain;\n      display: block;\n      border-radius: 6px;\n    }\n    \n    .cards-container, .cards-display, .community-cards {\n      display: flex;\n      justify-content: center;\n      gap: 10px;\n      margin: 20px 0;\n      flex-wrap: wrap;\n    }\n    \n    .hole-cards-btn {\n      background: white;\n      border: 2px solid #667eea;\n      border-radius: 10px;\n      padding: 15px 20px;\n      cursor: pointer;\n      transition: all 0.2s;\n      font-size: 1.1em;\n    }\n    \n    .hole-cards-btn:hover {\n      background: #f3f4f6;\n      transform: translateY(-2px);\n      box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);\n    }\n    \n    .hole-cards-btn .hint {\n      font-size: 0.85em;\n      color: #6b7280;\n      margin-top: 5px;\n    }\n  ",document.head.appendChild(e)}w();class k{mount(e){e.innerHTML='\n          <div class="home-container">\n            <h1 class="home-title">🎯 Poker Training Games</h1>\n            <p class="home-subtitle">Master poker from foundation to advanced</p>\n            \n            <div class="game-grid">\n              <a href="#" class="game-card" data-route="/foundation">\n                <span class="level-badge level-foundation">Foundation</span>\n                <h2 class="game-title">Talk the Talk</h2>\n                <p class="game-description">Learn the basic foundational lingo of poker with three training games.</p>\n              </a>\n              \n              <a href="#" class="game-card disabled">\n                <span class="level-badge level-beginner">Beginner</span>\n                <h2 class="game-title">Community Cards</h2>\n                <p class="game-description">Understand how community cards work in Texas Hold\'em.</p>\n                <span class="coming-soon">Coming Soon</span>\n              </a>\n              \n              <a href="#" class="game-card disabled">\n                <span class="level-badge level-intermediate">Intermediate</span>\n                <h2 class="game-title">Opponent Awareness</h2>\n                <p class="game-description">Learn to read the board and consider opponent hands.</p>\n                <span class="coming-soon">Coming Soon</span>\n              </a>\n              \n              <a href="#" class="game-card" data-route="/the-nuts">\n                <span class="level-badge level-advanced">Advanced</span>\n                <h2 class="game-title">The Nuts</h2>\n                <p class="game-description">Identify the best possible hand on any board with progressive difficulty.</p>\n              </a>\n            </div>\n          </div>\n        ',e.querySelectorAll("[data-route]").forEach(e=>{e.addEventListener("click",n=>{n.preventDefault();const t=e.dataset.route,a=r();a&&a.navigate(t)})})}serialize(){return{}}deserialize(e){}}class T{constructor(){this.currentGame=null,this.currentGameType=null}mount(e,n){if(this.currentGame&&this.currentGameType){const e=r(),n=e?.getParams(),t=n?.get("game");if(t===this.currentGameType)return}this.currentGame&&(this.currentGame.unmount(),this.currentGame=null,this.currentGameType=null),e.innerHTML='\n          <a href="#" class="back-button" data-route="/">← Back to Main Menu</a>\n          <div class="game-container">\n            <h1 style="text-align: center; color: #7D1346; margin-bottom: 10px;">Talk the Talk</h1>\n            <p style="text-align: center; color: #666; margin-bottom: 30px;">Learn the basic foundational lingo of poker</p>\n            \n            <div class="game-grid">\n              <a href="#" class="game-card" data-game="name-that-hand">\n                <h3 class="game-title">Name That Hand</h3>\n                <p class="game-description">Identify poker hands from 5 cards (30 rounds)</p>\n              </a>\n              \n              <a href="#" class="game-card" data-game="hand-vs-hand">\n                <h3 class="game-title">Hand vs Hand</h3>\n                <p class="game-description">Compare which of two hands wins (10 rounds)</p>\n              </a>\n              \n              <a href="#" class="game-card" data-game="best-five">\n                <h3 class="game-title">Best Five from Seven</h3>\n                <p class="game-description">Select the best 5-card hand from 7 cards (10 rounds)</p>\n              </a>\n            </div>\n          </div>\n        ',e.querySelector("[data-route]").addEventListener("click",e=>{e.preventDefault(),r()?.navigate("/")}),e.querySelectorAll("[data-game]").forEach(n=>{n.addEventListener("click",async t=>{t.preventDefault();const a=n.dataset.game;await this.launchGame(e,a)})});const t=r();if(t&&null!==n){const a=t.getParams().get("game");if(a&&!n?.currentGameType)return void this.launchGame(e,a)}n&&n.currentGameType&&this.launchGame(e,n.currentGameType,n.gameState)}async launchGame(e,t,a){e.innerHTML='\n          <div class="game-container" style="min-height: 400px; display: flex; align-items: center; justify-content: center;">\n            <div style="text-align: center;">\n              <div style="font-size: 48px; margin-bottom: 20px;">🃏</div>\n              <div style="font-size: 24px; color: #7D1346; font-weight: 600;">Loading game...</div>\n              <div style="font-size: 14px; color: #666; margin-top: 10px;">Shuffling the deck...</div>\n            </div>\n          </div>\n        ';try{let s;switch(t){case"name-that-hand":const{NameThatHand:e}=await n(async()=>{const{NameThatHand:e}=await import("./NameThatHand-xX_sNER_.js");return{NameThatHand:e}},__vite__mapDeps([0,1]));s=e;break;case"hand-vs-hand":const{HandVsHand:t}=await n(async()=>{const{HandVsHand:e}=await import("./HandVsHand-pZVq4nSL.js");return{HandVsHand:e}},__vite__mapDeps([2,1,3]));s=t;break;case"best-five":const{BestFiveFromSeven:a}=await n(async()=>{const{BestFiveFromSeven:e}=await import("./BestFiveFromSeven-BNXSNSzr.js");return{BestFiveFromSeven:e}},__vite__mapDeps([4,1,3]));s=a;break;default:throw new Error("Unknown game type")}this.currentGameType=t,this.currentGame=new s;const i=r();i&&i.updateParams({game:t}),e.innerHTML='\n            <a href="#" class="back-button" data-back>← Back to Foundation Games</a>\n            <div class="game-container" id="game-mount"></div>\n          ',e.querySelector("[data-back]").addEventListener("click",n=>{n.preventDefault(),this.currentGame&&(this.currentGame.unmount(),this.currentGame=null,this.currentGameType=null),i&&i.updateParams({}),this.mount(e,null)});const o=e.querySelector("#game-mount");this.currentGame.mount(o,a),this.currentGame.start()}catch(s){e.innerHTML='<div class="error">Failed to load game: '+s.message+"</div>"}}unmount(){this.currentGame&&(this.currentGame.unmount(),this.currentGame=null,this.currentGameType=null)}serialize(){return this.currentGame?{currentGameType:this.currentGameType,gameState:this.currentGame.serialize()}:{}}deserialize(e){}}var S;S={useHash:!0,container:document.getElementById("app"),routes:[{path:"/",title:"Poker Training Games",loader:async()=>new k},{path:"/foundation",title:"Foundation Games - Talk the Talk",loader:async()=>new T},{path:"/the-nuts",title:"The Nuts - Advanced",loader:async()=>{const{TheNuts:e}=await n(async()=>{const{TheNuts:e}=await import("./TheNuts-DUcCk286.js");return{TheNuts:e}},__vite__mapDeps([5,1,3])),t=new e;return{mount(e,n){e.innerHTML='\n                  <a href="#" class="back-button" data-route="/">← Back to Main Menu</a>\n                  <div class="game-container" id="the-nuts-mount" style="min-height: 400px;">\n                    <div class="game-loading">\n                      <div class="loading-spinner">\n                        <div class="loading-card"></div>\n                        <div class="loading-card"></div>\n                        <div class="loading-card"></div>\n                        <div class="loading-card"></div>\n                      </div>\n                      <div class="loading-text">Preparing The Nuts...</div>\n                      <div class="loading-subtext">Shuffling the deck...</div>\n                    </div>\n                  </div>\n                ',e.querySelector("[data-route]").addEventListener("click",e=>{e.preventDefault(),r()?.navigate("/")}),setTimeout(()=>{const a=e.querySelector("#the-nuts-mount");t.mount(a,n),t.start()},500)},unmount(){t.unmount()},serialize:()=>t.serialize(),deserialize(e){t.deserialize(e)}}}}]},a||(a=new t(S));export{s as R,i as S,g as c,b as f,v as g,w as i,p,f as r,y as s};
//# sourceMappingURL=main-DEXK9nnN.js.map
