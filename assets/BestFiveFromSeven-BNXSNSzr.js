import{B as e,a as n,g as t}from"./BaseGame-sCkLoj0v.js";import{g as s,c as r}from"./main-DEXK9nnN.js";import{f as a,g as c}from"./pokersolver-wrapper-RbdFFWZ_.js";class o extends e{constructor(e={}){super({name:"Best Five from Seven",difficulty:"foundation",rounds:10,timeLimit:45,description:"Select the best 5-card hand from 7 cards",instructions:["Look at all 7 cards","Click to select 5 cards","Submit your selection"],...e}),this.containerId="game-container",this.scenarios=[],this.selectedCards=new Set}generateScenarios(){const e=[];n(t()+100);for(let n=0;n<this.config.rounds;n++){let t=null,r=0;for(;!t&&r<100;){r++;const e=s({shuffled:!0}).slice(0,7),c=a(e);c.description.includes("High Card")&&n>3||(t={id:`bf7-${n}`,allCards:e,bestHand:c.cards,handName:c.description,possibleHands:[],choices:[],correctAnswer:c.cards.sort().join(","),explanation:`The best hand is ${c.description}`})}t&&e.push(t)}return this.scenarios=e,e}renderScenario(){const e=this.scenarios[this.state.currentRound-1];if(!e)return;this.currentScenario=e,this.selectedCards.clear();const n=this.uiManager.getGameArea();if(!n)return;n.innerHTML='\n      <div class="instructions">\n        Select the best 5-card poker hand from these 7 cards\n      </div>\n      \n      <div class="seven-cards" id="seven-cards"></div>\n      \n      <div class="selection-info">\n        <span id="cards-selected">0</span> / 5 cards selected\n      </div>\n      \n      <div class="action-buttons">\n        <button id="clear-btn" class="action-btn secondary">Clear Selection</button>\n        <button id="submit-btn" class="action-btn primary" disabled>Submit Hand</button>\n      </div>\n      \n      <div id="selected-display" class="selected-hand"></div>\n    ';const t=document.getElementById("seven-cards");t&&e.allCards.forEach((e,n)=>{const s=r(e,{width:85,height:120,clickable:!0,onClick:()=>this.toggleCard(e)});s.dataset.cardValue=e,t.appendChild(s)});const s=document.getElementById("clear-btn"),a=document.getElementById("submit-btn");s&&s.addEventListener("click",()=>this.clearSelection()),a&&a.addEventListener("click",()=>this.submitSelection())}toggleCard(e){this.selectedCards.has(e)?this.selectedCards.delete(e):this.selectedCards.size<5&&this.selectedCards.add(e),this.updateSelection()}clearSelection(){this.selectedCards.clear(),this.updateSelection()}updateSelection(){document.querySelectorAll(".seven-cards .card").forEach(e=>{const n=e.dataset.cardValue;n&&this.selectedCards.has(n)?e.classList.add("selected"):e.classList.remove("selected")});const e=document.getElementById("cards-selected");e&&(e.textContent=this.selectedCards.size.toString());const n=document.getElementById("submit-btn");n&&(n.disabled=5!==this.selectedCards.size);const t=document.getElementById("selected-display");if(t&&5===this.selectedCards.size){const e=Array.from(this.selectedCards),n=c(e);t.innerHTML=`\n        <div class="selected-label">Your selection:</div>\n        <div class="selected-hand-name">${n}</div>\n      `}else t&&(t.innerHTML="")}submitSelection(){if(!this.currentScenario||5!==this.selectedCards.size)return;const e=Array.from(this.selectedCards).sort(),n=this.currentScenario,t=n?.bestHand.sort()||[],s=e.join(",")===t.join(",");this.handleAnswer(s?"correct":"incorrect")}handleAnswer(e){this.submitAnswer(e)}showFeedback(e){if(!this.currentScenario)return;const n=this.uiManager.getGameArea();if(!n)return;const t=n.querySelectorAll(".card");t.forEach(e=>{e.style.pointerEvents="none"});n.querySelectorAll("button").forEach(e=>{e.disabled=!0}),t.forEach(e=>{const n=e.dataset.cardValue,t=this.currentScenario;n&&t?.bestHand.includes(n)&&e.classList.add("correct-answer")});const s=document.createElement("div");s.className="feedback "+(e?"correct":"incorrect"),s.innerHTML=`\n      <div class="feedback-icon">${e?"✓":"✗"}</div>\n      <div class="feedback-text">\n        ${e?"Correct!":"Not quite."}<br>\n        The best hand was: <strong>${this.currentScenario.handName}</strong>\n      </div>\n    `,n.appendChild(s)}renderGame(){this.addStyles()}addStyles(){if(document.getElementById("best-five-styles"))return;const e=document.createElement("style");e.id="best-five-styles",e.textContent=i(),document.head.appendChild(e)}checkAnswer(e,n){return"string"==typeof e&&"correct"===e||e===n}handleAnswerFeedback(e,n){this.showFeedback(e)}getInstructions(){return"Select the best possible 5-card poker hand from the 7 cards shown. Click cards to select them."}}function i(){return"\n    .instructions {\n      text-align: center;\n      font-size: 1.2em;\n      color: #333;\n      margin-bottom: 30px;\n      font-weight: 600;\n    }\n    \n    .seven-cards {\n      display: flex;\n      justify-content: center;\n      gap: 10px;\n      margin: 30px 0;\n      flex-wrap: wrap;\n    }\n    \n    .seven-cards .card {\n      transition: all 0.3s;\n      cursor: pointer;\n    }\n    \n    .seven-cards .card:hover {\n      transform: translateY(-10px);\n    }\n    \n    .seven-cards .card.selected {\n      transform: translateY(-20px);\n      box-shadow: 0 10px 30px rgba(199, 62, 154, 0.4);\n      border-color: #C73E9A;\n      border-width: 3px;\n    }\n    \n    .seven-cards .card.correct-answer {\n      border-color: #4CAF50;\n      border-width: 4px;\n      box-shadow: 0 10px 30px rgba(76, 175, 80, 0.4);\n    }\n    \n    .selection-info {\n      text-align: center;\n      font-size: 1.1em;\n      margin: 20px 0;\n      color: #666;\n    }\n    \n    #cards-selected {\n      font-weight: bold;\n      color: #C73E9A;\n      font-size: 1.2em;\n    }\n    \n    .action-buttons {\n      display: flex;\n      justify-content: center;\n      gap: 20px;\n      margin: 20px 0;\n    }\n    \n    .action-btn {\n      padding: 12px 30px;\n      font-size: 1.1em;\n      border-radius: 8px;\n      border: 2px solid;\n      cursor: pointer;\n      transition: all 0.3s;\n      font-weight: 600;\n    }\n    \n    .action-btn.primary {\n      background: #C73E9A;\n      color: white;\n      border-color: #C73E9A;\n    }\n    \n    .action-btn.primary:hover:not(:disabled) {\n      background: #932153;\n      border-color: #932153;\n      transform: translateY(-2px);\n    }\n    \n    .action-btn.primary:disabled {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n    \n    .action-btn.secondary {\n      background: white;\n      color: #666;\n      border-color: #ddd;\n    }\n    \n    .action-btn.secondary:hover {\n      background: #f5f5f5;\n      transform: translateY(-2px);\n    }\n    \n    .selected-hand {\n      text-align: center;\n      margin: 20px 0;\n      min-height: 50px;\n    }\n    \n    .selected-label {\n      color: #666;\n      font-size: 0.9em;\n      margin-bottom: 5px;\n    }\n    \n    .selected-hand-name {\n      font-size: 1.3em;\n      font-weight: bold;\n      color: #7D1346;\n    }\n    \n    .feedback {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background: white;\n      padding: 30px;\n      border-radius: 15px;\n      box-shadow: 0 10px 40px rgba(0,0,0,0.3);\n      text-align: center;\n      z-index: 100;\n    }\n    \n    .feedback-icon {\n      font-size: 3em;\n      margin-bottom: 10px;\n    }\n    \n    .feedback.correct .feedback-icon {\n      color: #4CAF50;\n    }\n    \n    .feedback.incorrect .feedback-icon {\n      color: #F44336;\n    }\n    \n    .feedback-text {\n      font-size: 1.1em;\n      color: #333;\n    }\n    \n    @media (max-width: 768px) {\n      .seven-cards .card {\n        width: 60px !important;\n        height: 85px !important;\n      }\n    }\n  "}export{o as BestFiveFromSeven,i as getBestFiveStyles};
//# sourceMappingURL=BestFiveFromSeven-BNXSNSzr.js.map
