{"version":3,"file":"BaseGame-BVYw41mq.js","sources":["../../src/components/Timer.ts","../../src/components/ScoreDisplay.ts","../../src/components/Modal.ts","../../src/lib/storage.ts","../../src/lib/random.ts","../../src/lib/theme.ts","../../src/games/BaseGame.ts"],"sourcesContent":["/**\n * Reusable timer component for games\n */\n\nimport type { TimerOptions } from '../types/ui.js';\n\nexport class Timer {\n  private duration: number;\n  private remaining: number;\n  private startTime: number = 0;\n  private intervalId: number | null = null;\n  private isPaused: boolean = false;\n  private pausedElapsedTime: number = 0;\n  private pauseStartTime: number | null = null;\n  private element: HTMLElement | null = null;\n  private options: TimerOptions;\n\n  constructor(options: TimerOptions) {\n    this.options = {\n      format: 'seconds',\n      showWarning: true,\n      warningThreshold: 10,\n      allowPause: false,\n      ...options\n    };\n    \n    this.duration = options.duration;\n    this.remaining = options.duration;\n  }\n\n  /**\n   * Attach timer to a DOM element for display\n   */\n  attachTo(element: HTMLElement | string): void {\n    this.element = typeof element === 'string' \n      ? document.getElementById(element) \n      : element;\n      \n    if (this.element && this.options.allowPause) {\n      this.element.style.cursor = 'pointer';\n      this.element.title = 'Click to pause/unpause';\n      this.element.addEventListener('click', () => this.toggle());\n    }\n    \n    this.updateDisplay();\n  }\n\n  /**\n   * Start the timer\n   */\n  start(): void {\n    if (this.intervalId) return;\n    \n    this.startTime = Date.now();\n    this.intervalId = window.setInterval(() => this.tick(), 100);\n    this.updateDisplay();\n  }\n\n  /**\n   * Stop the timer\n   */\n  stop(): void {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }\n\n  /**\n   * Pause the timer\n   */\n  pause(): void {\n    if (!this.isPaused && this.intervalId) {\n      this.isPaused = true;\n      this.pauseStartTime = Date.now();\n      this.stop();\n      \n      if (this.element) {\n        this.element.classList.add('paused');\n      }\n      \n      this.updateDisplay();\n    }\n  }\n\n  /**\n   * Resume the timer\n   */\n  resume(): void {\n    if (this.isPaused) {\n      this.isPaused = false;\n      \n      if (this.pauseStartTime) {\n        this.pausedElapsedTime += Date.now() - this.pauseStartTime;\n        this.pauseStartTime = null;\n      }\n      \n      if (this.element) {\n        this.element.classList.remove('paused');\n      }\n      \n      this.start();\n    }\n  }\n\n  /**\n   * Toggle between pause and resume\n   */\n  toggle(): void {\n    if (this.isPaused) {\n      this.resume();\n    } else {\n      this.pause();\n    }\n  }\n\n  /**\n   * Reset the timer\n   */\n  reset(): void {\n    this.stop();\n    this.remaining = this.duration;\n    this.isPaused = false;\n    this.pausedElapsedTime = 0;\n    this.pauseStartTime = null;\n    this.startTime = 0;\n    \n    if (this.element) {\n      this.element.classList.remove('paused', 'warning', 'expired');\n    }\n    \n    this.updateDisplay();\n  }\n\n  /**\n   * Get remaining time in seconds\n   */\n  getRemaining(): number {\n    return Math.max(0, this.remaining);\n  }\n\n  /**\n   * Get elapsed time in seconds\n   */\n  getElapsed(): number {\n    if (!this.startTime) return 0;\n    \n    const now = this.isPaused && this.pauseStartTime ? this.pauseStartTime : Date.now();\n    // Return elapsed time with decimal precision for smoother countdown\n    return (now - this.startTime - this.pausedElapsedTime) / 1000;\n  }\n\n  /**\n   * Check if timer has expired\n   */\n  isExpired(): boolean {\n    return this.remaining <= 0;\n  }\n\n  /**\n   * Internal tick function\n   */\n  private tick(): void {\n    const elapsed = this.getElapsed();\n    this.remaining = Math.max(0, this.duration - elapsed);\n    \n    if (this.options.onTick) {\n      this.options.onTick(this.remaining);\n    }\n    \n    this.updateDisplay();\n    \n    if (this.remaining <= 0) {\n      this.stop();\n      if (this.element) {\n        this.element.classList.add('expired');\n      }\n      if (this.options.onComplete) {\n        this.options.onComplete();\n      }\n    }\n  }\n\n  /**\n   * Update the display element\n   */\n  private updateDisplay(): void {\n    if (!this.element) return;\n    \n    const displayText = this.formatTime(this.remaining);\n    const pauseIndicator = this.isPaused ? ' ⏸' : '';\n    \n    this.element.textContent = displayText + pauseIndicator;\n    \n    // Add warning class if threshold reached\n    if (this.options.showWarning && \n        this.remaining <= this.options.warningThreshold! && \n        this.remaining > 0) {\n      this.element.classList.add('warning');\n    } else {\n      this.element.classList.remove('warning');\n    }\n  }\n\n  /**\n   * Format time for display\n   */\n  private formatTime(seconds: number): string {\n    if (this.options.format === 'mm:ss') {\n      const mins = Math.floor(seconds / 60);\n      const secs = seconds % 60;\n      return `${mins}:${secs.toString().padStart(2, '0')}`;\n    } else {\n      return seconds.toFixed(1) + 's';\n    }\n  }\n\n  /**\n   * Destroy the timer\n   */\n  destroy(): void {\n    this.stop();\n    if (this.element) {\n      this.element.classList.remove('paused', 'warning', 'expired');\n      if (this.options.allowPause) {\n        this.element.style.cursor = '';\n        this.element.title = '';\n      }\n    }\n  }\n  \n  /**\n   * Set the remaining time (for restoring state)\n   */\n  setTimeRemaining(seconds: number): void {\n    this.remaining = seconds;\n    this.duration = seconds;\n    this.updateDisplay();\n  }\n}\n\n/**\n * Inject timer styles into document\n */\nexport function injectTimerStyles(): void {\n  if (document.getElementById('timer-default-styles')) return;\n  \n  const style = document.createElement('style');\n  style.id = 'timer-default-styles';\n  style.textContent = getTimerStyles();\n  document.head.appendChild(style);\n}\n\n/**\n * Default timer styles\n */\nexport function getTimerStyles(): string {\n  return `\n    .timer-display {\n      font-size: 22px;\n      font-weight: 700;\n      color: #333;\n      min-width: 70px;\n      display: inline-block;\n      text-align: center;\n      background: #f0f0f0;\n      padding: 5px 10px;\n      border-radius: 20px;\n      transition: background 0.3s, color 0.3s;\n    }\n    \n    .timer-display.warning {\n      background: #FFEBEE;\n      color: #D32F2F;\n      animation: pulse 1s infinite;\n    }\n    \n    .timer-display.expired {\n      background: #D32F2F;\n      color: white;\n    }\n    \n    .timer-display.paused {\n      background: #FFE0B2;\n      color: #E65100;\n      animation: pulse 1.5s infinite;\n    }\n    \n    @keyframes pulse {\n      0% { opacity: 1; }\n      50% { opacity: 0.7; }\n      100% { opacity: 1; }\n    }\n  `;\n}","/**\n * Score display component for games\n */\n\nimport type { ScoreDisplayOptions } from '../types/ui.js';\n\nexport class ScoreDisplay {\n  private element: HTMLElement;\n  private options: ScoreDisplayOptions;\n\n  constructor(options: ScoreDisplayOptions) {\n    this.options = {\n      showStreak: false,\n      showAccuracy: false,\n      ...options\n    };\n    \n    this.element = this.createElement();\n    this.update();  // Initialize the display\n  }\n\n  private createElement(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = `score-display ${this.options.className || ''}`;\n    \n    return container;\n  }\n\n  update(updates?: Partial<ScoreDisplayOptions>): void {\n    if (updates) {\n      this.options = { ...this.options, ...updates };\n    }\n    \n    const parts: string[] = [\n      `<span class=\"score-current\">${this.options.current}</span>`,\n      '/',\n      `<span class=\"score-total\">${this.options.total}</span>`\n    ];\n    \n    if (this.options.showStreak && this.options.streak !== undefined) {\n      parts.push(`<span class=\"score-streak\">Streak: ${this.options.streak}</span>`);\n    }\n    \n    if (this.options.showAccuracy && this.options.accuracy !== undefined) {\n      const accuracyPercent = Math.round(this.options.accuracy * 100);\n      parts.push(`<span class=\"score-accuracy\">${accuracyPercent}%</span>`);\n    }\n    \n    if (this.element) {\n      this.element.innerHTML = parts.join(' ');\n    }\n  }\n\n  incrementScore(): void {\n    this.options.current++;\n    if (this.options.streak !== undefined) {\n      this.options.streak++;\n    }\n    this.updateAccuracy();\n    this.update();\n  }\n\n  resetStreak(): void {\n    if (this.options.streak !== undefined) {\n      this.options.streak = 0;\n      this.update();\n    }\n  }\n\n  private updateAccuracy(): void {\n    if (this.options.showAccuracy && this.options.total > 0) {\n      this.options.accuracy = this.options.current / this.options.total;\n    }\n  }\n\n  attachTo(parent: HTMLElement | string): void {\n    const parentEl = typeof parent === 'string' \n      ? document.getElementById(parent) \n      : parent;\n      \n    if (parentEl) {\n      parentEl.appendChild(this.element);\n    } else if (typeof parent === 'object' && parent) {\n      // If parent is an HTMLElement but not in DOM yet\n      parent.appendChild(this.element);\n    }\n  }\n\n  getElement(): HTMLElement {\n    return this.element;\n  }\n\n  reset(): void {\n    this.options.current = 0;\n    this.options.streak = 0;\n    this.options.accuracy = 0;\n    this.update();\n  }\n\n  destroy(): void {\n    if (this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n}\n\n/**\n * Inject score display styles into document\n */\nexport function injectScoreDisplayStyles(): void {\n  if (document.getElementById('score-display-default-styles')) return;\n  \n  const style = document.createElement('style');\n  style.id = 'score-display-default-styles';\n  style.textContent = getScoreDisplayStyles();\n  document.head.appendChild(style);\n}\n\n/**\n * Default score display styles\n */\nexport function getScoreDisplayStyles(): string {\n  return `\n    .score-display {\n      font-size: 18px;\n      font-weight: 600;\n      color: #333;\n      display: inline-flex;\n      align-items: center;\n      gap: 10px;\n      background: #f8f8f8;\n      padding: 8px 15px;\n      border-radius: 20px;\n    }\n    \n    .score-current {\n      color: #C73E9A;\n      font-size: 1.1em;\n    }\n    \n    .score-total {\n      color: #666;\n    }\n    \n    .score-streak {\n      margin-left: 10px;\n      padding-left: 10px;\n      border-left: 2px solid #ddd;\n      color: #7D1346;\n    }\n    \n    .score-accuracy {\n      margin-left: 10px;\n      padding-left: 10px;\n      border-left: 2px solid #ddd;\n      color: #666;\n    }\n  `;\n}","/**\n * Reusable modal component\n */\n\nimport type { ModalOptions, ModalButton } from '../types/ui.js';\n\nexport class Modal {\n  private container: HTMLElement;\n  private backdrop: HTMLElement;\n  private options: ModalOptions;\n  private isOpen: boolean = false;\n\n  constructor(options: ModalOptions) {\n    this.options = {\n      closeOnBackdrop: true,\n      closeOnEscape: true,\n      ...options\n    };\n    \n    this.container = this.createModalStructure();\n    this.backdrop = this.container.querySelector('.modal-backdrop')!;\n    \n    this.setupEventListeners();\n  }\n\n  private createModalStructure(): HTMLElement {\n    const container = document.createElement('div');\n    container.className = `modal ${this.options.className || ''}`;\n    container.innerHTML = `\n      <div class=\"modal-backdrop\"></div>\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h2 class=\"modal-title\">${this.options.title}</h2>\n          <button class=\"modal-close\" aria-label=\"Close\">&times;</button>\n        </div>\n        <div class=\"modal-body\"></div>\n        <div class=\"modal-footer\"></div>\n      </div>\n    `;\n    \n    // Set content\n    const body = container.querySelector('.modal-body')!;\n    if (typeof this.options.content === 'string') {\n      body.innerHTML = this.options.content;\n    } else {\n      body.appendChild(this.options.content);\n    }\n    \n    // Add buttons\n    if (this.options.buttons && this.options.buttons.length > 0) {\n      const footer = container.querySelector('.modal-footer')!;\n      this.options.buttons.forEach(btn => {\n        const button = this.createButton(btn);\n        footer.appendChild(button);\n      });\n    } else {\n      container.querySelector('.modal-footer')!.remove();\n    }\n    \n    return container;\n  }\n\n  private createButton(buttonConfig: ModalButton): HTMLElement {\n    const button = document.createElement('button');\n    button.textContent = buttonConfig.text;\n    button.className = `modal-button ${buttonConfig.className || ''} ${buttonConfig.isPrimary ? 'primary' : ''}`;\n    button.addEventListener('click', () => {\n      buttonConfig.onClick();\n      if (!buttonConfig.className?.includes('no-close')) {\n        this.close();\n      }\n    });\n    return button;\n  }\n\n  private setupEventListeners(): void {\n    // Close button\n    const closeBtn = this.container.querySelector('.modal-close');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => this.close());\n    }\n    \n    // Backdrop click\n    if (this.options.closeOnBackdrop) {\n      this.backdrop.addEventListener('click', () => this.close());\n    }\n    \n    // Escape key\n    if (this.options.closeOnEscape) {\n      this.handleEscape = this.handleEscape.bind(this);\n    }\n  }\n\n  private handleEscape(event: KeyboardEvent): void {\n    if (event.key === 'Escape' && this.isOpen) {\n      this.close();\n    }\n  }\n\n  open(): void {\n    if (this.isOpen) return;\n    \n    // Remove any existing modals first\n    const existingModals = document.querySelectorAll('.modal');\n    existingModals.forEach(modal => {\n      if (modal.parentNode) {\n        modal.parentNode.removeChild(modal);\n      }\n    });\n    \n    document.body.appendChild(this.container);\n    \n    // Force reflow for animation\n    this.container.offsetHeight;\n    \n    this.container.classList.add('active');\n    this.isOpen = true;\n    \n    if (this.options.closeOnEscape) {\n      document.addEventListener('keydown', this.handleEscape);\n    }\n    \n    if (this.options.onOpen) {\n      this.options.onOpen();\n    }\n  }\n\n  close(): void {\n    if (!this.isOpen) return;\n    \n    this.container.classList.remove('active');\n    this.isOpen = false;\n    \n    if (this.options.closeOnEscape) {\n      document.removeEventListener('keydown', this.handleEscape);\n    }\n    \n    setTimeout(() => {\n      if (this.container.parentNode) {\n        this.container.parentNode.removeChild(this.container);\n      }\n    }, 300); // Wait for animation\n    \n    if (this.options.onClose) {\n      this.options.onClose();\n    }\n  }\n\n  setContent(content: string | HTMLElement): void {\n    const body = this.container.querySelector('.modal-body')!;\n    if (typeof content === 'string') {\n      body.innerHTML = content;\n    } else {\n      body.innerHTML = '';\n      body.appendChild(content);\n    }\n  }\n\n  destroy(): void {\n    this.close();\n    if (this.options.closeOnEscape) {\n      document.removeEventListener('keydown', this.handleEscape);\n    }\n  }\n\n  static confirm(\n    title: string, \n    message: string, \n    onConfirm: () => void, \n    onCancel?: () => void\n  ): Modal {\n    const modal = new Modal({\n      title,\n      content: message,\n      buttons: [\n        {\n          text: 'Cancel',\n          onClick: () => {\n            if (onCancel) onCancel();\n          }\n        },\n        {\n          text: 'Confirm',\n          onClick: onConfirm,\n          isPrimary: true\n        }\n      ]\n    });\n    \n    modal.open();\n    return modal;\n  }\n\n  static alert(title: string, message: string, onClose?: () => void): Modal {\n    const modal = new Modal({\n      title,\n      content: message,\n      buttons: [\n        {\n          text: 'OK',\n          onClick: () => {\n            if (onClose) onClose();\n          },\n          isPrimary: true\n        }\n      ]\n    });\n    \n    modal.open();\n    return modal;\n  }\n}\n\n/**\n * Inject modal styles into document\n */\nexport function injectModalStyles(): void {\n  if (document.getElementById('modal-default-styles')) return;\n  \n  const style = document.createElement('style');\n  style.id = 'modal-default-styles';\n  style.textContent = getModalStyles();\n  document.head.appendChild(style);\n}\n\n/**\n * Default modal styles\n */\nexport function getModalStyles(): string {\n  return `\n    .modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 9999;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      opacity: 0;\n      visibility: hidden;\n      transition: opacity 0.3s, visibility 0.3s;\n    }\n    \n    .modal.active {\n      opacity: 1;\n      visibility: visible;\n    }\n    \n    .modal-backdrop {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(0, 0, 0, 0.5);\n    }\n    \n    .modal-content {\n      position: relative;\n      background: white;\n      border-radius: 12px;\n      max-width: 500px;\n      width: 90%;\n      max-height: 90vh;\n      overflow: auto;\n      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\n      transform: scale(0.9);\n      transition: transform 0.3s;\n    }\n    \n    .modal.active .modal-content {\n      transform: scale(1);\n    }\n    \n    .modal-header {\n      padding: 20px;\n      border-bottom: 1px solid #e0e0e0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    \n    .modal-title {\n      margin: 0;\n      font-size: 1.5em;\n      color: #333;\n    }\n    \n    .modal-close {\n      background: none;\n      border: none;\n      font-size: 28px;\n      cursor: pointer;\n      color: #999;\n      line-height: 1;\n      padding: 0;\n      width: 30px;\n      height: 30px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    \n    .modal-close:hover {\n      color: #333;\n    }\n    \n    .modal-body {\n      padding: 20px;\n    }\n    \n    .modal-footer {\n      padding: 20px;\n      border-top: 1px solid #e0e0e0;\n      display: flex;\n      justify-content: flex-end;\n      gap: 10px;\n    }\n    \n    .modal-button {\n      padding: 10px 20px;\n      border: 1px solid #ddd;\n      border-radius: 6px;\n      background: white;\n      cursor: pointer;\n      font-size: 14px;\n      transition: all 0.2s;\n    }\n    \n    .modal-button:hover {\n      background: #f5f5f5;\n    }\n    \n    .modal-button.primary {\n      background: #C73E9A;\n      color: white;\n      border-color: #C73E9A;\n    }\n    \n    .modal-button.primary:hover {\n      background: #932153;\n      border-color: #932153;\n    }\n  `;\n}","/**\n * Local storage utilities for game data persistence\n */\n\nimport type { HighScore, GameProgress } from '../types/games.js';\n\nconst STORAGE_PREFIX = 'poker-training-';\n\n/**\n * Storage keys for different data types\n */\nexport const StorageKeys = {\n  HIGH_SCORES: `${STORAGE_PREFIX}high-scores`,\n  GAME_PROGRESS: `${STORAGE_PREFIX}game-progress`,\n  SETTINGS: `${STORAGE_PREFIX}settings`,\n  ACHIEVEMENTS: `${STORAGE_PREFIX}achievements`,\n  COMPLETED_LEVELS: `${STORAGE_PREFIX}completed-levels`,\n  DAILY_CHALLENGES: `${STORAGE_PREFIX}daily-challenges`\n} as const;\n\n/**\n * Check if localStorage is available\n */\nexport function isStorageAvailable(): boolean {\n  try {\n    const testKey = '__localStorage_test__';\n    localStorage.setItem(testKey, 'test');\n    localStorage.removeItem(testKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Get item from localStorage with type safety\n */\nexport function getStorageItem<T>(key: string, defaultValue: T): T {\n  if (!isStorageAvailable()) return defaultValue;\n  \n  try {\n    const item = localStorage.getItem(key);\n    if (item === null) return defaultValue;\n    return JSON.parse(item) as T;\n  } catch (error) {\n    console.error(`Error reading from localStorage:`, error);\n    return defaultValue;\n  }\n}\n\n/**\n * Set item in localStorage\n */\nexport function setStorageItem<T>(key: string, value: T): boolean {\n  if (!isStorageAvailable()) return false;\n  \n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (error) {\n    console.error(`Error writing to localStorage:`, error);\n    return false;\n  }\n}\n\n/**\n * Remove item from localStorage\n */\nexport function removeStorageItem(key: string): boolean {\n  if (!isStorageAvailable()) return false;\n  \n  try {\n    localStorage.removeItem(key);\n    return true;\n  } catch (error) {\n    console.error(`Error removing from localStorage:`, error);\n    return false;\n  }\n}\n\n/**\n * Clear all game data from localStorage\n */\nexport function clearAllGameData(): boolean {\n  if (!isStorageAvailable()) return false;\n  \n  try {\n    const keys = Object.keys(localStorage);\n    keys.forEach(key => {\n      if (key.startsWith(STORAGE_PREFIX)) {\n        localStorage.removeItem(key);\n      }\n    });\n    return true;\n  } catch (error) {\n    console.error(`Error clearing localStorage:`, error);\n    return false;\n  }\n}\n\n/**\n * Get high scores for all games\n */\nexport function getHighScores(): Record<string, HighScore> {\n  return getStorageItem(StorageKeys.HIGH_SCORES, {});\n}\n\n/**\n * Get high score for a specific game\n */\nexport function getHighScore(gameName: string): HighScore | null {\n  const scores = getHighScores();\n  return scores[gameName] || null;\n}\n\n/**\n * Save high score for a game\n */\nexport function saveHighScore(gameName: string, score: HighScore): boolean {\n  const scores = getHighScores();\n  scores[gameName] = score;\n  return setStorageItem(StorageKeys.HIGH_SCORES, scores);\n}\n\n/**\n * Check if a score is a new high score\n */\nexport function isNewHighScore(gameName: string, score: number): boolean {\n  const currentHigh = getHighScore(gameName);\n  return !currentHigh || score > currentHigh.score;\n}\n\n/**\n * Get game progress\n */\nexport function getGameProgress(): GameProgress {\n  return getStorageItem(StorageKeys.GAME_PROGRESS, {\n    gamesPlayed: {},\n    highScores: {},\n    achievements: [],\n    totalPlayTime: 0\n  });\n}\n\n/**\n * Update game progress\n */\nexport function updateGameProgress(updates: Partial<GameProgress>): boolean {\n  const progress = getGameProgress();\n  const updated = { ...progress, ...updates };\n  return setStorageItem(StorageKeys.GAME_PROGRESS, updated);\n}\n\n/**\n * Increment games played counter\n */\nexport function incrementGamesPlayed(gameName: string): void {\n  const progress = getGameProgress();\n  progress.gamesPlayed[gameName] = (progress.gamesPlayed[gameName] || 0) + 1;\n  setStorageItem(StorageKeys.GAME_PROGRESS, progress);\n}\n\n/**\n * Get completed levels\n */\nexport function getCompletedLevels(): Set<string> {\n  const levels = getStorageItem<string[]>(StorageKeys.COMPLETED_LEVELS, []);\n  return new Set(levels);\n}\n\n/**\n * Mark level as completed\n */\nexport function markLevelCompleted(levelId: string): boolean {\n  const completed = getCompletedLevels();\n  completed.add(levelId);\n  return setStorageItem(StorageKeys.COMPLETED_LEVELS, Array.from(completed));\n}\n\n/**\n * Check if level is completed\n */\nexport function isLevelCompleted(levelId: string): boolean {\n  const completed = getCompletedLevels();\n  return completed.has(levelId);\n}\n\n/**\n * Get game settings\n */\nexport function getSettings(): Record<string, any> {\n  return getStorageItem(StorageKeys.SETTINGS, {\n    soundEnabled: true,\n    musicEnabled: true,\n    timerWarnings: true,\n    autoAdvance: true,\n    difficulty: 'normal'\n  });\n}\n\n/**\n * Update settings\n */\nexport function updateSettings(settings: Record<string, any>): boolean {\n  const current = getSettings();\n  const updated = { ...current, ...settings };\n  return setStorageItem(StorageKeys.SETTINGS, updated);\n}\n\n/**\n * Get a specific setting value\n */\nexport function getSetting<T>(key: string, defaultValue: T): T {\n  const settings = getSettings();\n  return settings[key] !== undefined ? settings[key] : defaultValue;\n}\n\n/**\n * Set a specific setting value\n */\nexport function setSetting(key: string, value: any): boolean {\n  const settings = getSettings();\n  settings[key] = value;\n  return setStorageItem(StorageKeys.SETTINGS, settings);\n}\n\n/**\n * Export all game data as JSON\n */\nexport function exportGameData(): string {\n  const data = {\n    highScores: getHighScores(),\n    progress: getGameProgress(),\n    completedLevels: Array.from(getCompletedLevels()),\n    settings: getSettings(),\n    exportDate: new Date().toISOString()\n  };\n  return JSON.stringify(data, null, 2);\n}\n\n/**\n * Import game data from JSON\n */\nexport function importGameData(jsonData: string): boolean {\n  try {\n    const data = JSON.parse(jsonData);\n    \n    if (data.highScores) {\n      setStorageItem(StorageKeys.HIGH_SCORES, data.highScores);\n    }\n    if (data.progress) {\n      setStorageItem(StorageKeys.GAME_PROGRESS, data.progress);\n    }\n    if (data.completedLevels) {\n      setStorageItem(StorageKeys.COMPLETED_LEVELS, data.completedLevels);\n    }\n    if (data.settings) {\n      setStorageItem(StorageKeys.SETTINGS, data.settings);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Error importing game data:', error);\n    return false;\n  }\n}","/**\n * Random number generation utilities with seeded random support\n */\n\ninterface RandomState {\n  seed: number | null;\n  generator: (() => number) | null;\n}\n\nlet randomState: RandomState = {\n  seed: null,\n  generator: null\n};\n\n/**\n * Mulberry32 seeded random number generator\n * Provides deterministic random numbers when given the same seed\n */\nexport function mulberry32(seed: number): () => number {\n  return function() {\n    let t = seed += 0x6D2B79F5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n  };\n}\n\n/**\n * Set the random seed for deterministic shuffling\n * @param seed - Seed value (use null for Math.random)\n */\nexport function setSeed(seed: number | null): void {\n  if (seed === null || seed === undefined) {\n    randomState.seed = null;\n    randomState.generator = null;\n  } else {\n    randomState.seed = seed;\n    randomState.generator = mulberry32(seed);\n  }\n}\n\n/**\n * Get the current seed\n */\nexport function getSeed(): number | null {\n  return randomState.seed;\n}\n\n/**\n * Get a random number using either seeded or Math.random\n * @returns Random number between 0 and 1\n */\nexport function getRandom(): number {\n  return randomState.generator ? randomState.generator() : Math.random();\n}\n\n/**\n * Get random integer between min and max (inclusive)\n */\nexport function getRandomInt(min: number, max: number): number {\n  return Math.floor(getRandom() * (max - min + 1)) + min;\n}\n\n/**\n * Get hourly seed based on UTC time\n * Ensures all players get the same puzzles within the same hour\n */\nexport function getHourlySeed(offset: number = 0): number {\n  const now = new Date();\n  const utcHour = Date.UTC(\n    now.getUTCFullYear(),\n    now.getUTCMonth(),\n    now.getUTCDate(),\n    now.getUTCHours()\n  );\n  return utcHour + offset;\n}\n\n/**\n * Get daily seed based on UTC date\n * Ensures all players get the same puzzles on the same day\n */\nexport function getDailySeed(offset: number = 0): number {\n  const now = new Date();\n  const utcDay = Date.UTC(\n    now.getUTCFullYear(),\n    now.getUTCMonth(),\n    now.getUTCDate()\n  );\n  return utcDay + offset;\n}\n\n/**\n * Shuffle an array in place using Fisher-Yates algorithm\n * Uses the current random state (seeded or not)\n */\nexport function shuffleArray<T>(array: T[]): T[] {\n  const newArray = [...array];\n  for (let i = newArray.length - 1; i > 0; i--) {\n    const j = Math.floor(getRandom() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray;\n}\n\n/**\n * Pick a random element from an array\n */\nexport function pickRandom<T>(array: T[]): T | undefined {\n  if (array.length === 0) return undefined;\n  return array[Math.floor(getRandom() * array.length)];\n}\n\n/**\n * Pick multiple random elements from an array (without replacement)\n */\nexport function pickMultipleRandom<T>(array: T[], count: number): T[] {\n  if (count >= array.length) return [...array];\n  \n  const shuffled = shuffleArray(array);\n  return shuffled.slice(0, count);\n}\n\n/**\n * Create a random number generator with a specific seed\n * This doesn't affect the global random state\n */\nexport function createSeededRandom(seed: number): {\n  random: () => number;\n  randomInt: (min: number, max: number) => number;\n  shuffle: <T>(array: T[]) => T[];\n  pick: <T>(array: T[]) => T | undefined;\n} {\n  const generator = mulberry32(seed);\n  \n  return {\n    random: generator,\n    randomInt: (min: number, max: number) => {\n      return Math.floor(generator() * (max - min + 1)) + min;\n    },\n    shuffle: <T>(array: T[]) => {\n      const newArray = [...array];\n      for (let i = newArray.length - 1; i > 0; i--) {\n        const j = Math.floor(generator() * (i + 1));\n        [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n      }\n      return newArray;\n    },\n    pick: <T>(array: T[]) => {\n      if (array.length === 0) return undefined;\n      return array[Math.floor(generator() * array.length)];\n    }\n  };\n}\n\n/**\n * Reset random state to use Math.random\n */\nexport function resetRandom(): void {\n  setSeed(null);\n}","/**\n * Shared theme and styles for Poker Power branding\n */\n\nexport const THEME = {\n  colors: {\n    primary: '#7D1346',\n    primaryDark: '#4a0e2d',\n    secondary: '#C73E9A',\n    secondaryLight: '#FF6EC7',\n    accent: '#ffb3d9',\n    text: '#333',\n    textLight: '#666',\n    white: '#ffffff',\n    background: 'linear-gradient(135deg, #7D1346 0%, #4a0e2d 100%)',\n    buttonGradient: 'linear-gradient(135deg, #FF6EC7 0%, #C73E9A 100%)',\n    buttonHover: 'linear-gradient(135deg, #C73E9A 0%, #FF6EC7 100%)'\n  }\n};\n\nexport function injectGameStyles(): void {\n  if (document.getElementById('game-theme-styles')) return;\n  \n  const style = document.createElement('style');\n  style.id = 'game-theme-styles';\n  style.textContent = getGameStyles();\n  document.head.appendChild(style);\n}\n\nexport function showLoadingScreen(container: HTMLElement, message: string = 'Loading game...'): void {\n  container.innerHTML = `\n    <div class=\"game-loading\">\n      <div class=\"loading-spinner\">\n        <div class=\"loading-card\"></div>\n        <div class=\"loading-card\"></div>\n        <div class=\"loading-card\"></div>\n        <div class=\"loading-card\"></div>\n      </div>\n      <div class=\"loading-text\">${message}</div>\n      <div class=\"loading-subtext\">Shuffling the deck...</div>\n    </div>\n  `;\n}\n\nexport function getGameStyles(): string {\n  return `\n    /* Loading screen styles */\n    .game-loading {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      min-height: 400px;\n      color: ${THEME.colors.primary};\n    }\n    \n    .loading-spinner {\n      width: 80px;\n      height: 80px;\n      margin-bottom: 20px;\n      position: relative;\n    }\n    \n    .loading-card {\n      position: absolute;\n      width: 40px;\n      height: 56px;\n      background: linear-gradient(135deg, ${THEME.colors.secondary}, ${THEME.colors.secondaryLight});\n      border-radius: 4px;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n      animation: shuffleCards 2s infinite ease-in-out;\n    }\n    \n    .loading-card:nth-child(1) {\n      animation-delay: 0s;\n      transform-origin: center bottom;\n    }\n    \n    .loading-card:nth-child(2) {\n      animation-delay: 0.2s;\n      transform-origin: center bottom;\n    }\n    \n    .loading-card:nth-child(3) {\n      animation-delay: 0.4s;\n      transform-origin: center bottom;\n    }\n    \n    .loading-card:nth-child(4) {\n      animation-delay: 0.6s;\n      transform-origin: center bottom;\n    }\n    \n    @keyframes shuffleCards {\n      0%, 100% {\n        transform: rotate(0deg) translateX(0);\n        opacity: 0.8;\n      }\n      25% {\n        transform: rotate(-15deg) translateX(-20px);\n        opacity: 1;\n      }\n      50% {\n        transform: rotate(0deg) translateX(0) translateY(-10px);\n        opacity: 1;\n      }\n      75% {\n        transform: rotate(15deg) translateX(20px);\n        opacity: 1;\n      }\n    }\n    \n    .loading-text {\n      font-size: 24px;\n      font-weight: 600;\n      margin-bottom: 10px;\n      animation: pulse 1.5s infinite ease-in-out;\n    }\n    \n    .loading-subtext {\n      font-size: 14px;\n      color: ${THEME.colors.textLight};\n      animation: fadeInOut 2s infinite ease-in-out;\n    }\n    \n    @keyframes pulse {\n      0%, 100% {\n        opacity: 0.8;\n      }\n      50% {\n        opacity: 1;\n      }\n    }\n    \n    @keyframes fadeInOut {\n      0%, 100% {\n        opacity: 0.5;\n      }\n      50% {\n        opacity: 1;\n      }\n    }\n    \n    /* Game container styles */\n    .game-container {\n      background: white;\n      border-radius: 12px;\n      padding: 20px;\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    }\n    \n    /* Choice buttons with Poker Power colors */\n    .choice-btn {\n      background: ${THEME.colors.buttonGradient};\n      color: white;\n      border: none;\n      padding: 12px 24px;\n      margin: 5px;\n      border-radius: 8px;\n      font-size: 16px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n    \n    .choice-btn:hover:not(:disabled) {\n      background: ${THEME.colors.buttonHover};\n      transform: translateY(-2px);\n      box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n    }\n    \n    .choice-btn:disabled {\n      opacity: 0.6;\n      cursor: not-allowed;\n      transform: none;\n    }\n    \n    .choice-btn.correct {\n      background: linear-gradient(135deg, #4caf50, #66bb6a);\n    }\n    \n    .choice-btn.incorrect {\n      background: linear-gradient(135deg, #f44336, #ef5350);\n    }\n    \n    /* Score display */\n    .score-display {\n      background: rgba(125, 19, 70, 0.1);\n      padding: 8px 16px;\n      border-radius: 8px;\n      font-weight: 600;\n      color: ${THEME.colors.primary};\n    }\n    \n    /* Timer with warning states */\n    .timer-display {\n      background: rgba(125, 19, 70, 0.1);\n      color: ${THEME.colors.primary};\n      font-weight: 700;\n    }\n    \n    .timer-display.warning {\n      background: #FFEBEE;\n      color: #D32F2F;\n    }\n    \n    /* Headers and text */\n    h1, h2, h3 {\n      color: ${THEME.colors.primary};\n    }\n    \n    .question {\n      color: ${THEME.colors.text};\n      font-size: 18px;\n      font-weight: 600;\n      margin: 20px 0;\n      text-align: center;\n    }\n    \n    /* Level badges */\n    .level-badge {\n      background: ${THEME.colors.buttonGradient};\n      color: white;\n      padding: 6px 12px;\n      border-radius: 20px;\n      font-size: 12px;\n      font-weight: 600;\n      text-transform: uppercase;\n      display: inline-block;\n    }\n    \n    /* Feedback messages */\n    .feedback {\n      padding: 15px;\n      border-radius: 8px;\n      margin: 15px 0;\n      font-weight: 600;\n      text-align: center;\n    }\n    \n    .feedback.correct {\n      background: #e8f5e9;\n      color: #2e7d32;\n      border: 2px solid #4caf50;\n    }\n    \n    .feedback.incorrect {\n      background: #ffebee;\n      color: #c62828;\n      border: 2px solid #f44336;\n    }\n    \n    /* Card selection */\n    .card.selected {\n      border: 3px solid ${THEME.colors.secondary};\n      transform: translateY(-5px);\n      box-shadow: 0 4px 8px rgba(199, 62, 154, 0.3);\n    }\n    \n    /* Next button */\n    .next-btn {\n      background: ${THEME.colors.buttonGradient};\n      color: white;\n      border: none;\n      padding: 12px 32px;\n      border-radius: 8px;\n      font-size: 16px;\n      font-weight: 600;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      margin: 20px auto;\n      display: block;\n    }\n    \n    .next-btn:hover {\n      background: ${THEME.colors.buttonHover};\n      transform: translateY(-2px);\n      box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n    }\n    \n    /* VS divider for Hand vs Hand */\n    .vs-divider {\n      font-size: 24px;\n      font-weight: 700;\n      color: ${THEME.colors.primary};\n      margin: 0 20px;\n      align-self: center;\n    }\n    \n    /* Hand display sections */\n    .hand-display {\n      text-align: center;\n      padding: 20px;\n      background: rgba(125, 19, 70, 0.05);\n      border-radius: 8px;\n      margin: 10px;\n    }\n    \n    .hand-display h3 {\n      margin-bottom: 15px;\n      color: ${THEME.colors.primary};\n    }\n  `;\n}","/**\n * Base class for all poker training games\n */\n\nimport type { IGame, GameConfig, GameState, GameResult, GameScenario } from '../types/games.js';\nimport type { GameModule, GameState as RouterGameState } from '../types/router.js';\nimport { Timer } from '../components/Timer.js';\nimport { ScoreDisplay } from '../components/ScoreDisplay.js';\nimport { Modal, injectModalStyles } from '../components/Modal.js';\nimport { saveHighScore, isNewHighScore, incrementGamesPlayed } from '../lib/storage.js';\nimport { getHourlySeed, setSeed, resetRandom } from '../lib/random.js';\nimport { injectDefaultStyles as injectCardStyles } from '../lib/cards.js';\nimport { injectGameStyles } from '../lib/theme.js';\n\nexport abstract class BaseGame implements IGame, GameModule {\n  config: GameConfig;\n  state: GameState;\n  \n  protected container: HTMLElement | null = null;\n  protected timer: Timer | null = null;\n  protected scoreDisplay: ScoreDisplay | null = null;\n  protected currentScenario: GameScenario | null = null;\n  protected scenarios: GameScenario[] = [];\n  protected answers: any[] = [];\n  protected startTime: number = 0;\n  \n  constructor(config: GameConfig) {\n    this.config = config;\n    this.state = this.createInitialState();\n  }\n  \n  protected createInitialState(): GameState {\n    return {\n      currentRound: 0,\n      totalRounds: this.config.rounds,\n      score: 0,\n      streak: 0,\n      bestStreak: 0,\n      timeRemaining: this.config.timeLimit,\n      isComplete: false,\n      isPaused: false,\n      mistakes: 0\n    };\n  }\n  \n  initialize(): void {\n    // Set up seeded random if needed\n    if (this.shouldUseSeed()) {\n      const seed = this.getSeed();\n      setSeed(seed);\n    }\n    \n    // Generate all scenarios upfront\n    this.scenarios = this.generateScenarios();\n    \n    // Reset random state\n    resetRandom();\n    \n    this.startTime = Date.now();\n  }\n  \n  start(): void {\n    if (this.state.currentRound === 0) {\n      this.initialize();\n    }\n    \n    this.state.isPaused = false;\n    \n    if (this.timer) {\n      this.timer.start();\n    }\n    \n    this.nextRound();\n  }\n  \n  pause(): void {\n    this.state.isPaused = true;\n    if (this.timer) {\n      this.timer.pause();\n    }\n  }\n  \n  resume(): void {\n    this.state.isPaused = false;\n    if (this.timer) {\n      this.timer.resume();\n    }\n  }\n  \n  reset(): void {\n    this.state = this.createInitialState();\n    this.answers = [];\n    this.currentScenario = null;\n    this.scenarios = [];\n    \n    if (this.timer) {\n      this.timer.reset();\n    }\n    \n    if (this.scoreDisplay) {\n      this.scoreDisplay.reset();\n    }\n    \n    this.initialize();\n  }\n  \n  nextRound(): void {\n    if (this.state.currentRound >= this.state.totalRounds) {\n      this.endGame();\n      return;\n    }\n    \n    this.state.currentRound++;\n    this.currentScenario = this.scenarios[this.state.currentRound - 1];\n    \n    if (this.scoreDisplay) {\n      this.scoreDisplay.update({\n        current: this.state.score,\n        total: this.state.totalRounds,\n        streak: this.state.streak\n      });\n    }\n    \n    this.renderScenario();\n  }\n  \n  submitAnswer(answer: any): boolean {\n    if (!this.currentScenario || this.state.isPaused || this.state.isComplete) {\n      return false;\n    }\n    \n    const isCorrect = this.checkAnswer(answer, this.currentScenario.correctAnswer);\n    \n    this.answers.push({\n      answer,\n      isCorrect,\n      timestamp: Date.now(),\n      timeToAnswer: this.timer ? this.config.timeLimit! - this.timer.getRemaining() : undefined\n    });\n    \n    if (isCorrect) {\n      this.state.score++;\n      this.state.streak++;\n      this.state.bestStreak = Math.max(this.state.bestStreak, this.state.streak);\n      \n      if (this.scoreDisplay) {\n        this.scoreDisplay.incrementScore();\n      }\n    } else {\n      this.state.streak = 0;\n      this.state.mistakes++;\n      \n      if (this.scoreDisplay) {\n        this.scoreDisplay.resetStreak();\n      }\n    }\n    \n    this.handleAnswerFeedback(isCorrect, answer);\n    \n    // Auto-advance after a delay\n    setTimeout(() => {\n      if (!this.state.isPaused && !this.state.isComplete) {\n        this.nextRound();\n      }\n    }, isCorrect ? 500 : 2000);\n    \n    return isCorrect;\n  }\n  \n  protected endGame(): void {\n    this.state.isComplete = true;\n    \n    if (this.timer) {\n      this.timer.stop();\n    }\n    \n    const result = this.getResult();\n    \n    // Save high score\n    if (isNewHighScore(this.config.name, result.score)) {\n      this.saveHighScore();\n    }\n    \n    // Update games played counter\n    incrementGamesPlayed(this.config.name);\n    \n    // Show results\n    this.showResults(result);\n  }\n  \n  getResult(): GameResult {\n    const timeElapsed = Math.floor((Date.now() - this.startTime) / 1000);\n    \n    return {\n      score: this.state.score,\n      totalRounds: this.state.totalRounds,\n      accuracy: this.state.totalRounds > 0 ? this.state.score / this.state.totalRounds : 0,\n      timeElapsed,\n      bestStreak: this.state.bestStreak,\n      mistakes: this.state.mistakes\n    };\n  }\n  \n  saveHighScore(): void {\n    const result = this.getResult();\n    \n    saveHighScore(this.config.name, {\n      game: this.config.name,\n      score: result.score,\n      accuracy: result.accuracy,\n      date: new Date().toISOString(),\n      timeElapsed: result.timeElapsed\n    });\n  }\n  \n  render(container: HTMLElement): void {\n    // Reset state for a fresh game\n    this.state = this.createInitialState();\n    this.scenarios = [];\n    this.answers = [];\n    this.currentScenario = null;\n    \n    this.container = container;\n    this.setupUI();\n    this.renderGame();\n  }\n  \n  destroy(): void {\n    if (this.timer) {\n      this.timer.destroy();\n      this.timer = null;\n    }\n    \n    if (this.scoreDisplay) {\n      this.scoreDisplay.destroy();\n      this.scoreDisplay = null;\n    }\n    \n    if (this.container) {\n      this.container.innerHTML = '';\n      this.container = null;\n    }\n  }\n  \n  // GameModule interface implementation\n  mount(container: HTMLElement, state?: RouterGameState): void {\n    this.render(container);\n    \n    // If we have saved state, restore it after rendering\n    // But if the game was complete, don't restore - start fresh\n    if (state && state.gameState && !state.gameState.isComplete) {\n      this.deserialize(state);\n    }\n  }\n  \n  unmount(): void {\n    this.destroy();\n  }\n  \n  serialize(): RouterGameState {\n    return {\n      gameState: this.state,\n      currentRound: this.state.currentRound,\n      score: this.state.score,\n      streak: this.state.streak,\n      bestStreak: this.state.bestStreak,\n      answers: this.answers,\n      scenarios: this.scenarios,\n      currentScenario: this.currentScenario,\n      startTime: this.startTime\n    };\n  }\n  \n  deserialize(state: RouterGameState): void {\n    if (state.gameState) {\n      this.state = state.gameState;\n    }\n    if (state.answers) {\n      this.answers = state.answers;\n    }\n    if (state.scenarios) {\n      this.scenarios = state.scenarios;\n    }\n    if (state.currentScenario) {\n      this.currentScenario = state.currentScenario;\n    }\n    if (state.startTime) {\n      this.startTime = state.startTime;\n    }\n    \n    // Update UI to reflect restored state\n    if (this.scoreDisplay) {\n      this.scoreDisplay.update({\n        current: this.state.score,\n        total: this.state.totalRounds,\n        streak: this.state.streak\n      });\n    }\n    \n    // Restore timer if needed\n    if (this.timer && this.state.timeRemaining) {\n      this.timer.setTimeRemaining(this.state.timeRemaining);\n    }\n    \n    // Re-render current scenario\n    if (this.currentScenario) {\n      this.renderScenario();\n    }\n  }\n  \n  protected setupUI(): void {\n    if (!this.container) return;\n    \n    // Inject all necessary styles\n    injectCardStyles();\n    injectModalStyles();\n    injectGameStyles();\n    \n    // Clear existing content first\n    this.container.innerHTML = '';\n    \n    // Clean up existing instances\n    if (this.timer) {\n      this.timer.destroy();\n      this.timer = null;\n    }\n    if (this.scoreDisplay) {\n      this.scoreDisplay.destroy();\n      this.scoreDisplay = null;\n    }\n    \n    // Create header with score and timer\n    const header = document.createElement('div');\n    header.className = 'game-header';\n    \n    // Add score display\n    this.scoreDisplay = new ScoreDisplay({\n      current: this.state.score,\n      total: this.state.totalRounds,\n      showStreak: true,\n      streak: this.state.streak\n    });\n    header.appendChild(this.scoreDisplay.getElement());\n    \n    // Add timer if time limit is set\n    if (this.config.timeLimit) {\n      this.timer = new Timer({\n        duration: this.config.timeLimit,\n        onComplete: () => this.handleTimeUp(),\n        allowPause: true\n      });\n      \n      const timerEl = document.createElement('div');\n      timerEl.id = 'game-timer';\n      timerEl.className = 'timer-display';\n      header.appendChild(timerEl);\n      \n      this.timer.attachTo(timerEl);\n    }\n    \n    this.container.appendChild(header);\n    \n    // Create game area\n    const gameArea = document.createElement('div');\n    gameArea.className = 'game-area';\n    gameArea.id = 'game-area';\n    this.container.appendChild(gameArea);\n  }\n  \n  protected handleTimeUp(): void {\n    this.endGame();\n  }\n  \n  protected showResults(result: GameResult): void {\n    const accuracyPercent = Math.round(result.accuracy * 100);\n    \n    const modal = new Modal({\n      title: 'Game Complete!',\n      content: `\n        <div class=\"results-content\">\n          <h3>Score: ${result.score}/${result.totalRounds}</h3>\n          <p>Accuracy: ${accuracyPercent}%</p>\n          <p>Best Streak: ${result.bestStreak}</p>\n          ${result.timeElapsed ? `<p>Time: ${Math.floor(result.timeElapsed / 60)}:${(result.timeElapsed % 60).toString().padStart(2, '0')}</p>` : ''}\n        </div>\n      `,\n      buttons: [\n        {\n          text: 'Play Again',\n          onClick: () => {\n            this.reset();\n            this.start();\n          },\n          isPrimary: true\n        },\n        {\n          text: 'Main Menu',\n          onClick: () => {\n            window.location.href = '/';\n          }\n        }\n      ]\n    });\n    \n    modal.open();\n  }\n  \n  // Abstract methods that must be implemented by subclasses\n  protected abstract generateScenarios(): GameScenario[];\n  protected abstract renderScenario(): void;\n  protected abstract renderGame(): void;\n  protected abstract checkAnswer(answer: any, correctAnswer: any): boolean;\n  protected abstract handleAnswerFeedback(isCorrect: boolean, answer: any): void;\n  \n  // Optional methods that can be overridden\n  protected shouldUseSeed(): boolean {\n    return false; // Override if you want deterministic scenarios\n  }\n  \n  protected getSeed(): number {\n    return getHourlySeed();\n  }\n}"],"names":["Timer","constructor","options","this","startTime","intervalId","isPaused","pausedElapsedTime","pauseStartTime","element","format","showWarning","warningThreshold","allowPause","duration","remaining","attachTo","document","getElementById","style","cursor","title","addEventListener","toggle","updateDisplay","start","Date","now","window","setInterval","tick","stop","clearInterval","pause","classList","add","resume","remove","reset","getRemaining","Math","max","getElapsed","isExpired","elapsed","onTick","onComplete","displayText","formatTime","pauseIndicator","textContent","seconds","floor","toString","padStart","toFixed","destroy","setTimeRemaining","ScoreDisplay","showStreak","showAccuracy","createElement","update","container","className","updates","parts","current","total","streak","push","accuracy","accuracyPercent","round","innerHTML","join","incrementScore","updateAccuracy","resetStreak","parent","parentEl","appendChild","getElement","parentNode","removeChild","Modal","isOpen","closeOnBackdrop","closeOnEscape","createModalStructure","backdrop","querySelector","setupEventListeners","body","content","buttons","length","footer","forEach","btn","button","createButton","buttonConfig","text","isPrimary","onClick","includes","close","closeBtn","handleEscape","bind","event","key","open","querySelectorAll","modal","offsetHeight","onOpen","removeEventListener","setTimeout","onClose","setContent","confirm","message","onConfirm","onCancel","alert","STORAGE_PREFIX","StorageKeys","HIGH_SCORES","GAME_PROGRESS","COMPLETED_LEVELS","isStorageAvailable","testKey","localStorage","setItem","removeItem","getStorageItem","defaultValue","item","getItem","JSON","parse","error","setStorageItem","value","stringify","getHighScores","isNewHighScore","gameName","score","currentHigh","getHighScore","incrementGamesPlayed","progress","gamesPlayed","highScores","achievements","totalPlayTime","getCompletedLevels","levels","Set","markLevelCompleted","levelId","completed","Array","from","randomState","seed","generator","setSeed","t","imul","mulberry32","getRandom","random","getHourlySeed","offset","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","shuffleArray","array","newArray","i","j","THEME","primary","secondary","secondaryLight","textLight","buttonGradient","buttonHover","injectGameStyles","id","head","BaseGame","config","timer","scoreDisplay","currentScenario","scenarios","answers","state","createInitialState","currentRound","totalRounds","rounds","bestStreak","timeRemaining","timeLimit","isComplete","mistakes","initialize","shouldUseSeed","getSeed","generateScenarios","nextRound","endGame","renderScenario","submitAnswer","answer","isCorrect","checkAnswer","correctAnswer","timestamp","timeToAnswer","handleAnswerFeedback","result","getResult","name","saveHighScore","showResults","timeElapsed","scores","game","date","toISOString","render","setupUI","renderGame","mount","gameState","deserialize","unmount","serialize","injectCardStyles","injectModalStyles","header","handleTimeUp","timerEl","gameArea","location","href"],"mappings":"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"}