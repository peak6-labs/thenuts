import{B as n,s as e}from"./BaseGame-DXEyezz4.js";import{p as t,S as r,R as o,g as s,r as a}from"./main-BNzdIAgl.js";const c=["High Card","Pair","Two Pair","Three of a Kind","Straight","Flush","Full House","Four of a Kind","Straight Flush","Royal Flush"];function i(n){return"A"===n?14:"K"===n?13:"Q"===n?12:"J"===n?11:"T"===n?10:parseInt(n)}function u(n){if(n.length<5)return!1;const e=n.map(n=>t(n)),r=[...new Set(e.map(n=>i(n.rank)))].sort((n,e)=>e-n);for(let t=0;t<=r.length-5;t++){let n=!0;for(let e=0;e<4;e++)if(r[t+e]-r[t+e+1]!==1){n=!1;break}if(n)return!0}const o=r.includes(14),s=r.includes(2),a=r.includes(3),c=r.includes(4),u=r.includes(5);return o&&s&&a&&c&&u}function l(n){if(n.length<5)return!1;const e=n.map(n=>t(n)),o={h:[],d:[],c:[],s:[]};for(const t of e)o[t.suit].push(t);for(const t of r)if(o[t].length>=5){if(u(o[t].map(n=>n.rank+n.suit)))return!0}return!1}function d(n){const e=new Map;for(const r of n){const n=t(r);e.set(n.rank,(e.get(n.rank)||0)+1)}return e}function h(n){const e=n.map(n=>t(n)).map(n=>n.toString());if(n.length<5)return{name:"High Card",rank:1,cards:e};if(l(n)&&n.some(n=>"A"===t(n).rank))return{name:"Royal Flush",rank:10,cards:e};if(l(n))return{name:"Straight Flush",rank:9,cards:e};const r=function(n){const e=d(n),t=[];for(const[r,o]of e)4===o&&t.push(r);return t.sort((n,e)=>i(e)-i(n))}(n);if(r.length>0)return{name:"Four of a Kind",rank:8,cards:e};const o=function(n){const e=d(n),t=[];for(const[r,o]of e)3===o&&t.push(r);return t.sort((n,e)=>i(e)-i(n))}(n),s=function(n){const e=d(n),t=[];for(const[r,o]of e)2===o&&t.push(r);return t.sort((n,e)=>i(e)-i(n))}(n);return o.length>0&&s.length>0?{name:"Full House",rank:7,cards:e}:function(n){if(n.length<5)return!1;const e=n.map(n=>t(n)),r={h:0,d:0,c:0,s:0};for(const t of e)if(r[t.suit]++,r[t.suit]>=5)return!0;return!1}(n)?{name:"Flush",rank:6,cards:e}:u(n)?{name:"Straight",rank:5,cards:e}:o.length>0?{name:"Three of a Kind",rank:4,cards:e}:s.length>=2?{name:"Two Pair",rank:3,cards:e}:1===s.length?{name:"Pair",rank:2,cards:e}:{name:"High Card",rank:1,cards:e}}function f(n,e){const s=[...e];switch(n){case"Pair":return p(s,1);case"Two Pair":return p(s,2);case"Three of a Kind":return m(s);case"Straight":return function(n){const e=n.sort((n,e)=>i(t(e).rank)-i(t(n).rank));return e.slice(0,5)}(s);case"Flush":return g(s);case"Full House":return function(n){const e=m(n);if(!e)return null;const r=t(e[0]).rank,o=n.filter(n=>t(n).rank!==r).slice(0,2);return o.length<2?null:[...e.slice(0,3),...o]}(s);case"Four of a Kind":return function(n){for(const e of o){const r=n.filter(n=>t(n).rank===e);if(4===r.length){const o=n.find(n=>t(n).rank!==e);return[...r,o]}}return null}(s);case"Straight Flush":return function(n){return g(n)}(s);case"Royal Flush":return function(n){for(const e of r){const t=["T","J","Q","K","A"].map(n=>n+e);if(t.every(e=>n.includes(e)))return t}return null}(s);default:return s.slice(0,5)}}function p(n,e){const r=[],s=new Set;for(let a=0;a<e;a++){const e=o.find(n=>!s.has(n));if(!e)return null;const a=n.filter(n=>t(n).rank===e).slice(0,2);if(a.length<2)return null;r.push(...a),s.add(e)}for(;r.length<5;){const e=n.find(n=>!r.includes(n)&&!s.has(t(n).rank));if(!e)return null;r.push(e),s.add(t(e).rank)}return r}function m(n){for(const e of o){const r=n.filter(n=>t(n).rank===e);if(r.length>=3){return[...r.slice(0,3),...n.filter(n=>t(n).rank!==e).slice(0,2)]}}return null}function g(n){for(const e of r){const r=n.filter(n=>t(n).suit===e);if(r.length>=5)return r.slice(0,5)}return null}class k extends n{constructor(){super({name:"Name That Hand",difficulty:"foundation",rounds:30,description:"Identify poker hands from 5 cards",instructions:["Look at the 5 cards shown","Identify what poker hand they make","Select the correct hand name from the choices","Learn to recognize all 10 hand types"]}),this.targetHandTypes=[]}generateScenarios(){const n=[];this.targetHandTypes=[];for(let e=0;e<3;e++)this.targetHandTypes.push(...c);this.targetHandTypes=e(this.targetHandTypes);for(let e=0;e<this.config.rounds;e++){const t=this.targetHandTypes[e],r=s({shuffled:!0});let o=f(t,r);o||(o=r.slice(0,5));const a=h(o).name,c=this.generateChoices(a);n.push({id:`round-${e+1}`,correctAnswer:a,choices:c,communityCards:{flop:[o[0],o[1],o[2]],turn:o[3],river:o[4]}})}return n}generateChoices(n){const t=[],r=[...c];t.push({id:n,display:n,value:n});const o=r.filter(e=>e!==n),s=e(o).slice(0,3);for(const e of s)t.push({id:e,display:e,value:e});return e(t)}renderScenario(){if(!this.currentScenario)return;const n=this.uiManager.getGameArea();if(!n)return;const e=[];if(this.currentScenario.communityCards){const{flop:n,turn:t,river:r}=this.currentScenario.communityCards;n&&e.push(...n),t&&e.push(t),r&&e.push(r)}n.innerHTML=`\n      <div class="round-info">\n        <h3>Round ${this.state.currentRound} of ${this.state.totalRounds}</h3>\n        <p>What poker hand do these cards make?</p>\n      </div>\n      \n      <div class="cards-display" id="cards-display"></div>\n      \n      <div class="choices-container" id="choices-container"></div>\n      \n      <div class="feedback" id="feedback" style="display: none;"></div>\n    `;const t=n.querySelector("#cards-display");t&&a(e,t,{width:80,height:115,style:"simple"});const r=n.querySelector("#choices-container");if(r&&this.currentScenario.choices){r.innerHTML="";for(const n of this.currentScenario.choices){const e=document.createElement("button");e.className="choice-btn",e.textContent=n.display||"",e.onclick=()=>this.submitAnswer(n.value),r.appendChild(e)}}}renderGame(){this.addStyles()}checkAnswer(n,e){return n===e}handleAnswerFeedback(n,e){const t=this.uiManager.getGameArea(),r=t?.querySelector("#feedback");if(!r)return;const o=t?.querySelectorAll(".choice-btn");o?.forEach(n=>{const t=n;t.disabled=!0,t.textContent===this.currentScenario?.correctAnswer?t.classList.add("correct"):t.textContent===e&&t.classList.add("incorrect")}),r.style.display="block",r.className="feedback "+(n?"correct":"incorrect"),r.innerHTML=n?"✓ Correct! Well done!":`✗ That's ${e}. The correct answer is ${this.currentScenario?.correctAnswer}.`}addStyles(){if(document.getElementById("name-that-hand-styles"))return;const n=document.createElement("style");n.id="name-that-hand-styles",n.textContent="\n      .round-info {\n        text-align: center;\n        margin-bottom: 30px;\n      }\n      \n      .round-info h3 {\n        color: #7D1346;\n        margin-bottom: 10px;\n      }\n      \n      .cards-display {\n        display: flex;\n        justify-content: center;\n        gap: 10px;\n        margin: 30px 0;\n        flex-wrap: wrap;\n      }\n      \n      .choices-container {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        gap: 15px;\n        margin: 30px auto;\n        max-width: 600px;\n      }\n      \n      .choice-btn {\n        padding: 15px 20px;\n        border: 2px solid #C73E9A;\n        border-radius: 10px;\n        background: white;\n        color: #C73E9A;\n        font-size: 1.1em;\n        font-weight: 600;\n        cursor: pointer;\n        transition: all 0.3s ease;\n      }\n      \n      .choice-btn:hover:not(:disabled) {\n        background: #C73E9A;\n        color: white;\n        transform: translateY(-2px);\n      }\n      \n      .choice-btn:disabled {\n        cursor: not-allowed;\n        opacity: 0.7;\n      }\n      \n      .choice-btn.correct {\n        background: #4CAF50;\n        border-color: #4CAF50;\n        color: white;\n      }\n      \n      .choice-btn.incorrect {\n        background: #f44336;\n        border-color: #f44336;\n        color: white;\n      }\n      \n      .feedback {\n        text-align: center;\n        padding: 15px;\n        border-radius: 10px;\n        margin: 20px auto;\n        max-width: 500px;\n        font-size: 1.1em;\n        font-weight: 600;\n      }\n      \n      .feedback.correct {\n        background: #e8f5e9;\n        color: #2e7d32;\n      }\n      \n      .feedback.incorrect {\n        background: #ffebee;\n        color: #c62828;\n      }\n    ",document.head.appendChild(n)}}export{k as NameThatHand};
//# sourceMappingURL=NameThatHand-DgzGTPU0.js.map
