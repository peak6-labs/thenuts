import{B as e,a as t,g as s}from"./BaseGame-BVYw41mq.js";import{g as n,c as r}from"./main-BdMgXgLc.js";import{f as c,g as a}from"./pokersolver-wrapper-RbdFFWZ_.js";class i extends e{constructor(e={}){super({name:"Best Five from Seven",difficulty:"foundation",rounds:10,timeLimit:45,description:"Select the best 5-card hand from 7 cards",instructions:["Look at all 7 cards","Click to select 5 cards","Submit your selection"],...e}),this.containerId="game-container",this.scenarios=[],this.selectedCards=new Set}generateScenarios(){const e=[];t(s()+100);for(let t=0;t<this.config.rounds;t++){let s=null,r=0;for(;!s&&r<100;){r++;const e=n({shuffled:!0}).slice(0,7),a=c(e);a.description.includes("High Card")&&t>3||(s={id:`bf7-${t}`,allCards:e,bestHand:a.cards,handName:a.description,possibleHands:[],choices:[],correctAnswer:a.cards.sort().join(","),explanation:`The best hand is ${a.description}`})}s&&e.push(s)}return this.scenarios=e,e}renderScenario(){const e=this.scenarios[this.state.currentRound||0];if(!e)return;this.currentScenario=e,this.selectedCards.clear();const t=this.container;if(!t)return;let s=t.querySelector(".game-area");s||(s=document.createElement("div"),s.className="game-area",t.appendChild(s)),s.innerHTML='\n      <div class="instructions">\n        Select the best 5-card poker hand from these 7 cards\n      </div>\n      \n      <div class="seven-cards" id="seven-cards"></div>\n      \n      <div class="selection-info">\n        <span id="cards-selected">0</span> / 5 cards selected\n      </div>\n      \n      <div class="action-buttons">\n        <button id="clear-btn" class="action-btn secondary">Clear Selection</button>\n        <button id="submit-btn" class="action-btn primary" disabled>Submit Hand</button>\n      </div>\n      \n      <div id="selected-display" class="selected-hand"></div>\n    ';const n=document.getElementById("seven-cards");n&&e.allCards.forEach((e,t)=>{const s=r(e,{width:85,height:120,clickable:!0,onClick:()=>this.toggleCard(e)});s.dataset.cardValue=e,n.appendChild(s)});const c=document.getElementById("clear-btn"),a=document.getElementById("submit-btn");c&&c.addEventListener("click",()=>this.clearSelection()),a&&a.addEventListener("click",()=>this.submitSelection())}toggleCard(e){this.selectedCards.has(e)?this.selectedCards.delete(e):this.selectedCards.size<5&&this.selectedCards.add(e),this.updateSelection()}clearSelection(){this.selectedCards.clear(),this.updateSelection()}updateSelection(){document.querySelectorAll(".seven-cards .card").forEach(e=>{const t=e.dataset.cardValue;t&&this.selectedCards.has(t)?e.classList.add("selected"):e.classList.remove("selected")});const e=document.getElementById("cards-selected");e&&(e.textContent=this.selectedCards.size.toString());const t=document.getElementById("submit-btn");t&&(t.disabled=5!==this.selectedCards.size);const s=document.getElementById("selected-display");if(s&&5===this.selectedCards.size){const e=Array.from(this.selectedCards),t=a(e);s.innerHTML=`\n        <div class="selected-label">Your selection:</div>\n        <div class="selected-hand-name">${t}</div>\n      `}else s&&(s.innerHTML="")}submitSelection(){if(!this.currentScenario||5!==this.selectedCards.size)return;const e=Array.from(this.selectedCards).sort(),t=this.currentScenario,s=t?.bestHand.sort()||[],n=e.join(",")===s.join(",");this.handleAnswer(n?"correct":"incorrect")}handleAnswer(e){if(!this.currentScenario)return;const t="correct"===e;t?(this.state.score++,this.state.streak++):this.state.streak=0,this.showFeedback(t),setTimeout(()=>{this.state.currentRound<this.config.rounds-1?(this.state.currentRound++,this.renderScenario()):this.state.isComplete=!0},3e3)}showFeedback(e){if(!this.currentScenario)return;const t=document.querySelector(".game-area");if(!t)return;const s=t.querySelectorAll(".card");s.forEach(e=>{e.style.pointerEvents="none"});t.querySelectorAll("button").forEach(e=>{e.disabled=!0}),s.forEach(e=>{const t=e.dataset.cardValue,s=this.currentScenario;t&&s?.bestHand.includes(t)&&e.classList.add("correct-answer")});const n=document.createElement("div");n.className="feedback "+(e?"correct":"incorrect"),n.innerHTML=`\n      <div class="feedback-icon">${e?"✓":"✗"}</div>\n      <div class="feedback-text">\n        ${e?"Correct!":"Not quite."}<br>\n        The best hand was: <strong>${this.currentScenario.handName}</strong>\n      </div>\n    `,t.appendChild(n)}renderGame(){this.renderScenario()}checkAnswer(e,t){return!1}handleAnswerFeedback(e){}getInstructions(){return"Select the best possible 5-card poker hand from the 7 cards shown. Click cards to select them."}}export{i as BestFiveFromSeven};
//# sourceMappingURL=BestFiveFromSeven-Ini4YUrf.js.map
